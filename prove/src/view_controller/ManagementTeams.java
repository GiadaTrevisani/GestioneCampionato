/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view_controller;

import java.awt.Dimension;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Ranking;
import model.Team;
import org.json.simple.parser.ParseException;

/**
 *
 * @author giadatrevisani
 */
public final class ManagementTeams extends javax.swing.JFrame {
    private final Ranking rank;
    private final String sport;
    private final DefaultTableModel model;
    private boolean openNewTeam, openViewUpdate;
    
    
    
    public ManagementTeams(Ranking rank, String sport){
        initComponents();
        model = (DefaultTableModel) viewTeams.getModel();
        openNewTeam = false;
        openViewUpdate = false;
        this.sport = sport;
        this.rank = rank;
        
        rank.addTeam("mamma", "soliera", "cacca");
        rank.addTeam("papà", "gallipoli", "cacchina");
        rank.addTeam("io", "firenze", "caccola");
        rank.addTeam("vale", "roma", "cacchetta");
        rank.addTeam("luca", "bologna", "caccona");
        rank.addTeam("nonna", "eggio", "caccarella");
        rank.addTeam("nonno", "carpi", "caccuccia");
        
       
        printTable();
        this.creaGui();
    }
    
    private void creaGui() {
       this.setTitle(sport);
       this.setMinimumSize(new Dimension(700, 500));
       this.setSize(800, 600); 
       this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }
    
    public void printTable(){
        model.setRowCount(0);
        for (int i = 0; i < rank.getTeams().size(); i++) {
            model.insertRow(i, new Object[]{rank.getTeams().get(i).getName(), rank.getTeams().get(i).getCity(), rank.getTeams().get(i).getLogo()} );
        }
    }

    /**
     * This method is called from within the init() method to initialize the
     * form. WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchTeams = new javax.swing.JTextField();
        newbtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        viewTeams = new javax.swing.JTable();
        takeTeamsbtn = new javax.swing.JButton();
        saveTeamsbtn = new javax.swing.JButton();
        searchbtn = new javax.swing.JButton();
        finebtn = new javax.swing.JButton();
        viewbtn = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(0, 0));

        searchTeams.setToolTipText("");
        searchTeams.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTeamsActionPerformed(evt);
            }
        });
        searchTeams.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTeamsKeyReleased(evt);
            }
        });

        newbtn.setText("New");
        newbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newbtnActionPerformed(evt);
            }
        });

        viewTeams.setAutoCreateRowSorter(true);
        viewTeams.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Città", "Logo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(viewTeams);

        takeTeamsbtn.setText("<html><p style = \"text-align: center\">Carica Squadre<br>Da File</p></html>");
        takeTeamsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                takeTeamsbtnActionPerformed(evt);
            }
        });

        saveTeamsbtn.setText("Salva Squadre");
        saveTeamsbtn.setName("jnjn"); // NOI18N
        saveTeamsbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveTeamsbtnActionPerformed(evt);
            }
        });

        searchbtn.setText("cerca");
        searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchbtnActionPerformed(evt);
            }
        });

        finebtn.setBackground(new java.awt.Color(255, 0, 0));
        finebtn.setText("x");
        finebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finebtnActionPerformed(evt);
            }
        });

        viewbtn.setText("<html><p style = \"text-align: center\">Visualizza<br>Modifica</p></html>");
        viewbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 493, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(takeTeamsbtn)
                                    .addComponent(saveTeamsbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(viewbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(searchTeams, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(finebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchTeams, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchbtn)
                    .addComponent(finebtn))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(viewbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveTeamsbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(takeTeamsbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Questo metodo crea un nuovo oggetto Team vuoto e lo passa alla classe NewTeam
     * dove sarà inserita la nuova squadra.
     * @param evt 
     */
    private void newbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newbtnActionPerformed
        if(openNewTeam == false){ 
            openNewTeam = true;
            Team nt = new Team("", "", "");
            NewTeam newTeam;
            
            newTeam = new NewTeam(nt, rank, this, sport);
            newTeam.setVisible(true);
            newTeam.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                    openNewTeam = false;
                }
            });
        }
    }//GEN-LAST:event_newbtnActionPerformed

    /**
     * Questo metodo prende i teams presenti nel file JSON teams.json e li salva
     * nell'array teams presenti nell'oggetto rank.
     * @param evt 
     */
    private void takeTeamsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_takeTeamsbtnActionPerformed
        System.out.println("Carico squadre da file");
        try {
            rank.takeFromFile();
            JOptionPane.showMessageDialog(null, "Squadre caricate con successo");
        } catch (IOException | ParseException ex) {
            JOptionPane.showMessageDialog(null, "Squadre non caricate: file mancante oppure non corrretto");
        }
        
        printTable();
    }//GEN-LAST:event_takeTeamsbtnActionPerformed

    private void searchTeamsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTeamsActionPerformed
    
    }//GEN-LAST:event_searchTeamsActionPerformed

    /**
     * Questo metodo salva i teams presenti nell'array teams dell'oggetto rank
     * nel file JSON teams.json
     * @param evt 
     */
    private void saveTeamsbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveTeamsbtnActionPerformed
        try {
            rank.saveTeams();
            JOptionPane.showMessageDialog(null, "Squadre salvate correttamente");
        } catch (FileNotFoundException ex) {
            System.out.println("Salvataggio non avvenuto");
            JOptionPane.showMessageDialog(null, "Salvataggio non avvenuto");
        }
        
    }//GEN-LAST:event_saveTeamsbtnActionPerformed

    private void searchTeamsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTeamsKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTeamsKeyReleased

    /**
     * Questo metodo cerca la squadra inserita nella TextField searchTeam e visualizza
     * il/i risultati nella tabella.
     * @param evt 
     */
    private void searchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchbtnActionPerformed
        int j = 0;
        model.setRowCount(0);
        for (int i = 0; i < rank.getTeams().size(); i++) {
            if(rank.getTeams().get(i).getName().equals(searchTeams.getText()) || rank.getTeams().get(i).getCity().equals(searchTeams.getText())){
                
                model.insertRow(j, new Object[]{rank.getTeams().get(i).getName(), rank.getTeams().get(i).getCity(), rank.getTeams().get(i).getLogo()} );
                j++;
            }
        }
    }//GEN-LAST:event_searchbtnActionPerformed

    /**
     * Questo metodo ripristina la tabella iniziale dopo che ho cercato una squadra.
    */
    private void finebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finebtnActionPerformed
        searchTeams.setText("");
        printTable();
    }//GEN-LAST:event_finebtnActionPerformed

    /**
     * Questo metodo chiama una nuova finestra dove verrà visualizzato il team che si è cliccato nella tabella.
     * Cliccando sul bottone Modifica Visualizza è possibile anche modificare la squadra che si è cliccata nella tabella.
     * @param evt 
     */
    private void viewbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewbtnActionPerformed
        if(openViewUpdate == false){ 
            openViewUpdate = true;
            int selectedRowIndex = viewTeams.getSelectedRow();
            Team view_update;
            try {
                view_update = rank.getTeamforName(viewTeams.getModel().getValueAt(selectedRowIndex, 0).toString());
            } catch (Exception ex) {
                System.out.println("Errore, la squadra presente nella tabella non è presente nella lista dei teams");
                JOptionPane.showMessageDialog(null, "Errore, la squadra presente nella tabella non è presente nella lista dei teams");
                return ;
            }
            NewTeam newTeam;

            newTeam = new NewTeam(view_update, rank, this, sport);
            newTeam.setVisible(true);
            newTeam.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent windowEvent) {
                    openViewUpdate = false;
                }
            });
        }
    }//GEN-LAST:event_viewbtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton finebtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton newbtn;
    private javax.swing.JButton saveTeamsbtn;
    private javax.swing.JTextField searchTeams;
    private javax.swing.JButton searchbtn;
    private javax.swing.JButton takeTeamsbtn;
    private javax.swing.JTable viewTeams;
    private javax.swing.JButton viewbtn;
    // End of variables declaration//GEN-END:variables

}
