/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view_controller;

import java.awt.Dimension;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import model.Match;


/**
 * Questo JFrame viene chiamato dalla classe ViewCalendar quando si vuole 
 * visualizzare una partita o quando si vuole inserire o modificare 
 * il risutato di una squadra. Nel frame vengono visualizzate i nomi, le 
 * città e il logo delle due squadre e attraverso le textfield del risultato
 * è possibile inserire i risultati che hanno ottenuto le due squadre.
 * È previsto che l'inserimento del punteggio sia conforme alle regole dello 
 * sport, nel caso in cui si inserisca un risultato non conforme alle norme 
 * dello sport il match non viene modificato.
 * @author giadatrevisani
 */
public class ViewMatch extends javax.swing.JFrame {
    private final String sport;
    private final String filePath = "img_logo/";
    private final String imgPath;
    private final Match match;
    private final ViewCalendar father;
    
    public ViewMatch(Match match, ViewCalendar father, String sport) {
        this.sport = sport;
        this.father = father;
        this.match = match;
        imgPath = "Soliera.jpg";
        initComponents();
        
        printMatch();
        this.creaGui();
    }
    
    private void creaGui(){
        this.setTitle(sport);
        this.setMinimumSize(new Dimension(800, 545));
        this.setSize(800, 600); 
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE); 
    }
    
    private void printMatch(){
        nameHomelbl.setText(match.getHomeTeam().getName());
        cittaHomelbl.setText(match.getHomeTeam().getCity());
        nameGuestlbl.setText(match.getGuestTeam().getName());
        cittaGuestlbl.setText(match.getGuestTeam().getCity());
        if(match.getPlayed()) {
            pointsHometxt.setText(String.valueOf(match.getPointsHome()));
            pointsGuesttxt.setText(String.valueOf(match.getPointsGuest()));
        } else {
            pointsHometxt.setText("-");
            pointsGuesttxt.setText("-");
        }
        
        try{
            logoGuestlbl.setIcon(new ImageIcon(ImageIO.read(new File(filePath + match.getGuestTeam().getLogo()))));
            logoHomelbl.setIcon(new ImageIcon(ImageIO.read(new File(filePath + match.getHomeTeam().getLogo()))));
            
        } catch (IOException ex){
            System.out.println("immagine non esistente");
            JOptionPane.showMessageDialog(null, "immagine non esistente");
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nameHomelbl = new javax.swing.JLabel();
        cittaHomelbl = new javax.swing.JLabel();
        logoHomelbl = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        nameGuestlbl = new javax.swing.JLabel();
        cittaGuestlbl = new javax.swing.JLabel();
        logoGuestlbl = new javax.swing.JLabel();
        pointsHometxt = new javax.swing.JTextField();
        pointsGuesttxt = new javax.swing.JTextField();
        updatebtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Squadra casa: ");

        jLabel2.setText("Città: ");

        jLabel3.setText("Logo: ");

        jLabel4.setText("Punti Casa: ");

        jLabel8.setText("Squadra Ospite:");

        jLabel9.setText("Città: ");

        jLabel10.setText("Logo:");

        jLabel11.setText("Punti Ospite: ");

        updatebtn.setText("Modifica");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cittaHomelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameHomelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(logoHomelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                        .addGap(20, 20, 20)
                        .addComponent(pointsHometxt, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(110, 110, 110)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(pointsGuesttxt, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(logoGuestlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cittaGuestlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameGuestlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(256, 256, 256))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameGuestlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nameHomelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cittaGuestlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(cittaHomelbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(logoHomelbl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logoGuestlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(pointsHometxt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pointsGuesttxt, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(updatebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metodo che va ad aggiornare i punti di un match. Per aggiornare abbiamo 
     * bisogno di controllare alcune eccezioni:
     * Per prima cosa verifichiamo che uno dei due campi punti casa o ospite non 
     * siano vuoti.
     * Come seconda cosa verifichiamo che sia stato effettuato un aggiornamento 
     * guardando se i campi punti casa o ospite sono stati cambiati in
     * @param evt 
     */
    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        if(pointsHometxt.getText().equals("") || pointsGuesttxt.getText().equals("") || pointsHometxt.getText().equals("-") || pointsGuesttxt.getText().equals("-")){
            System.out.println("Uno dei campi è vuoto");
            JOptionPane.showMessageDialog(null, "Uno dei campi è vuoto");
        } else {
            //campi non vuoti posso controllare le altre eccezioni
            //se i due campi non sono stati aggiornati glielo diciamo 
            if(pointsGuesttxt.equals(match.getPointsGuest()) && pointsHometxt.equals(match.getPointsHome())){
                //i campi non sono stati aggiornati, notifica.
                System.out.println("Il match non è stato modificato");
                JOptionPane.showMessageDialog(null, "Il match non è stato modificato");
            } else {
                // Leggo i numeri inseriti e verifico che siano sensati
                int hp = -1;
                int gp = -1;
                try {
                    hp = Integer.parseInt(pointsHometxt.getText());
                    gp = Integer.parseInt(pointsGuesttxt.getText());
                } catch (NumberFormatException e) {
                    System.out.println("I punteggi inseriti non sono numeri validi");
                    JOptionPane.showMessageDialog(null, "I punteggi inseriti non sono numeri validi");
                    return ;
                }
                
                if(hp < 0 || gp < 0){
                    System.out.println("Punteggi negativi non sono validi");
                    JOptionPane.showMessageDialog(null, "Punteggi negativi non sono validi");
                    return ;
                }
                
                //controlliamo che i punti siamo stati modificati correttamente
                switch (sport) {
                    case "Soccer":{
                        /**
                         * Controlliamo che i punti assegnati al calcio siano 
                         * conformi alla normativa sull'assegnamento del punteggio
                         * nello sport. In questo caso, nello sport si possono
                         * assegnare tutti i punti che uno vuole e anche pareggiare.
                         */
                        match.setGuestPoints(gp);
                        match.setHomePoints(hp);
                        match.setPlayed(true);
                        System.out.println("Punteggio del match modificato");
                        JOptionPane.showMessageDialog(null, "Punteggio del match modificato");

                        break;
                    }
                    case "Basket":{
                        /**
                         * Nel caso del basket controlliamo solo che i due punteggi 
                         * inseriti non siano uguali perchè in questo tipo di 
                         * sport non è possibile pareggiare.
                         * Dopo aver verificato che non sia stato inserito un 
                         * pareggio, controllo il caso in cui si voglia azzerare
                         * il punteggio.
                         */
                        if(gp ==  hp){
                            System.out.println("Nel basket non è possibile pareggiare");
                            JOptionPane.showMessageDialog(null, "Nel basket non è possibile pareggiare");
                        } else {
                            match.setGuestPoints(gp);
                            match.setHomePoints(hp);
                            match.setPlayed(true);
                            System.out.println("Punteggio del match modificato");
                            JOptionPane.showMessageDialog(null, "Punteggio del match modificato");
                        }
                        break;
                    }
                    case "Volley":{
                        /**
                         * Nel caso della pallavolo controlliamo che una squadra 
                         * abbia fatto 3 punti e l'altra tra 0 e 2. Come nel basket
                         * anche nella pallavolo non si può pareggiare, quindi 
                         * dovremo controllare anche questa possibilità.
                         */
                        if(gp ==  hp){
                            System.out.println("Nella pallavolo non è possibile pareggiare");
                            JOptionPane.showMessageDialog(null, "Nella pallavolo non è possibile pareggiare");
                        } else {
                            if(gp == 3 && hp < 3 && hp >= 0){
                                match.setGuestPoints(gp);
                                match.setHomePoints(hp);
                                match.setPlayed(true);
                                System.out.println("Punteggio del match modificato");
                                JOptionPane.showMessageDialog(null, "Punteggio del match modificato");
                            } 
                            if(hp == 3 && gp < 3 && gp >= 0){
                                match.setGuestPoints(gp);
                                match.setHomePoints(hp);
                                match.setPlayed(true);
                                System.out.println("Punteggio del match modificato");
                                JOptionPane.showMessageDialog(null, "Punteggio del match modificato");
                            } 
                        }
                        break;
                    }
                    default:{
                        //sport non esiste non potrà mai capitare ma io ce lo metto
                        System.out.println("Lo sport non esiste nel progetto");
                        JOptionPane.showMessageDialog(null, "Lo sport non esiste nel progetto");
                        break;
                    }
                }
            }
        }
        //aggiorno la tabella nella finestra padre (vista delle squadre)
        father.printTable();  
    }//GEN-LAST:event_updatebtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cittaGuestlbl;
    private javax.swing.JLabel cittaHomelbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel logoGuestlbl;
    private javax.swing.JLabel logoHomelbl;
    private javax.swing.JLabel nameGuestlbl;
    private javax.swing.JLabel nameHomelbl;
    private javax.swing.JTextField pointsGuesttxt;
    private javax.swing.JTextField pointsHometxt;
    private javax.swing.JButton updatebtn;
    // End of variables declaration//GEN-END:variables
}
